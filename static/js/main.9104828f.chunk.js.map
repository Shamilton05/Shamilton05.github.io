{"version":3,"sources":["components/navigation.jsx","store.js","components/Text.js","diamonds/BackfaceMaterial.js","diamonds/RefractionMaterial.js","blocks.js","diamonds/Diamonds.js","diamonds/Glass.js","components/CustomMaterial.js","components/Plane.js","index.js"],"names":["Navigation","props","className","href","state","sections","pages","zoom","paragraphs","offset","factor","header","image","aspect","stripes","color","height","diamonds","x","pos","Vector3","scale","rectangles","rendered","top","createRef","Text","children","size","left","right","bottom","opacity","layers","font","data","useLoader","FontLoader","geom","usePromise","Promise","res","TextBufferGeometry","curveSegments","minFilter","LinearFilter","onUpdate","useCallback","self","box","geometry","computeBoundingBox","boundingBox","getSize","position","y","ref","useRef","last","current","useFrame","shift","lerp","frustumCulled","attach","transparent","RefractionMaterial","options","vertexShader","fragmentShader","side","BackSide","ShaderMaterial","uniforms","envMap","value","backfaceMap","resolution","offsetContext","createContext","Block","useBlock","parentOffset","sectionHeight","undefined","curY","curTop","Provider","useThree","viewport","useContext","viewportWidth","width","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor","dummy","Object3D","Diamonds","gltf","GLTFLoader","console","log","useMemo","scene","center","gl","camera","clock","model","ratio","getPixelRatio","envFbo","WebGLRenderTarget","backfaceFbo","BackfaceMaterial","texture","backfaceMaterial","refractionMaterial","forEach","i","t","getElapsedTime","s","set","copy","length","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","autoClear","setRenderTarget","clearColor","render","clearDepth","material","args","__$","Boxes","CustomMaterial","hasTexture","Color","this","extend","Plane","forwardRef","map","Startup","Paragraph","index","text","w","pixelWidth","useEffect","setPixelRatio","getDevicePixelRatio","style","textAlign","tabIndex","mediaQuery","is_firefox","navigator","userAgent","toLowerCase","indexOf","window","devicePixelRatio","matchMedia","matches","Content","images","TextureLoader","key","Math","PI","Background","depthTest","ReactDOM","scrollArea","onScroll","e","target","scrollTop","concurrent","pixelRatio","orthographic","fallback","Array","fill","_","id","document","getElementById"],"mappings":"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","file":"static/js/main.9104828f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport \"../styles.css\"\r\n\r\n\r\nfunction Navigation(props) {\r\n    return (\r\n        <div className=\"frame\">\r\n            <h1 className=\"frame__title\">spencer hamilton</h1>\r\n            <div className=\"frame__links\">\r\n                <a className=\"frame__link\"  href=\"/resume\">\r\n                    resume\r\n                </a>\r\n                <a className=\"frame__link\" href=\"/home\">\r\n                    home\r\n                </a>\r\n                <a className=\"frame__link\" href=\"/procreate\">\r\n                    procreate\r\n                </a>\r\n                <a className=\"frame__link\" href=\"https://github.com/Shamilton05\">\r\n                    github\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import { createRef } from \"react\"\r\nimport { Euler, Vector3 } from \"three\"\r\n\r\nconst state = {\r\n  sections: 8,\r\n  pages: 7,\r\n  zoom: 75,\r\n  paragraphs: [\r\n    {\r\n      offset: 1,\r\n      factor: 1,\r\n      header: \"dream\",\r\n      image: \"/house.png\",\r\n      aspect: 1,\r\n      \r\n    },\r\n    {\r\n      offset: 2,\r\n      factor: 1,\r\n      header: \"opportunity\",\r\n      image: \"/Light.png\",\r\n      aspect: 1,\r\n      \r\n    },\r\n    {\r\n      offset: 3,\r\n      factor: 1,\r\n      header: \"prise\",\r\n      image: \"/Flowers.png\",\r\n      aspect: 1,\r\n      \r\n    },\r\n    {\r\n      offset: 4,\r\n      factor: 1,\r\n      header: \"fixate\",\r\n      image: \"/trees.png\",\r\n      aspect: 1,\r\n      \r\n    },\r\n    {\r\n      offset: 5,\r\n      factor: 1,\r\n      header: \"flow\",\r\n      image: \"/cup.png\",\r\n      aspect: 1,\r\n      \r\n    },\r\n    { offset: 6, factor: 1.0, header: \"escape\", image: \"/cabin.png\", aspect: 1,  },\r\n    { offset: 7, factor: 1.0, header: \"origin\", image: \"/Run1.png\", aspect: 1,  }\r\n  ],\r\n  stripes: [\r\n    { offset: -0.50, color: \"#fff7c7\", height: 13 },\r\n    { offset: 2.75, color: \"#fff7c7\", height: 13 },\r\n    { offset: 6.05, color: \"#fff7c7\", height: 13 }\r\n  ],\r\n  diamonds: [\r\n    { x: 2.5, offset: -0.05, pos: new Vector3(), scale: 0.6, factor: 1.8 },\r\n    //{ x: -11, offset: 0.9, pos: new Vector3(), scale: 0.8, factor: 2.1 },\r\n   // { x: 3, offset: 2, pos: new Vector3(), scale: 0.8, factor: 2.5 },\r\n    { x: -8, offset: 3.15, pos: new Vector3(), scale: 0.8, factor: 1.75 },\r\n   // { x: 3, offset: 4, pos: new Vector3(), scale: 0.8, factor: 2.5 },\r\n   // { x: -2, offset: 5.0, pos: new Vector3(), scale: 0.6, factor: 0.85 },\r\n   // { x: 3, offset: 6, pos: new Vector3(), scale: 0.8, factor: 2 },\r\n    { x: -6, offset: 7.15, pos: new Vector3(), scale: 0.4, factor: 2 }\r\n  ],\r\n  rectangles: [\r\n    { x: -6.7, offset: 0.9, pos: new Vector3(), scale: 5.0, factor: 2.1 },\r\n    { x: 3, offset: 2, pos: new Vector3(), scale: 3.8, factor: 2.5},\r\n    { x: -8, offset: 3.15, pos: new Vector3(), scale: 3.8, factor: 1.75 },\r\n    { x: 3, offset: 4, pos: new Vector3(), scale: 3.8, factor: 2.5 },\r\n    { x: -2, offset: 5.0, pos: new Vector3(), scale: 3.6, factor: 0.85 },\r\n    { x: 3, offset: 6, pos: new Vector3(), scale: 3.8, factor: 2 },\r\n    { x: -6, offset: 7.15, pos: new Vector3(), scale: 3.4, factor: 2 }\r\n  ],\r\n  rendered: false,\r\n  top: createRef()\r\n}\r\n\r\nexport default state\r\n","import { FontLoader, Vector3, TextBufferGeometry, LinearFilter } from \"three\"\r\n\r\nimport React, { useCallback, useRef } from \"react\"\r\nimport { useLoader, useFrame } from \"react-three-fiber\"\r\nimport usePromise from \"react-promise-suspense\"\r\nimport lerp from \"lerp\"\r\nimport state from \"../store\"\r\n\r\nfunction Text({ children, size = 1, left, right, top, bottom, color = \"white\", opacity = 1, height = 0.01, layers = 0, font = \"/MOONGET_Heavy.blob\", ...props }) {\r\n  const data = useLoader(FontLoader, font)\r\n  const geom = usePromise(() => new Promise(res => res(new TextBufferGeometry(children, { font: data, size: 1, height, curveSegments: 32, minFilter: LinearFilter }))), [children])\r\n  const onUpdate = useCallback(\r\n    self => {\r\n      const box = new Vector3()\r\n      self.geometry.computeBoundingBox()\r\n      self.geometry.boundingBox.getSize(box)\r\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2\r\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2\r\n    },\r\n    [left, right, top, bottom]\r\n  )\r\n\r\n  const ref = useRef()\r\n  let last = state.top.current\r\n  useFrame(() => {\r\n    ref.current.shift = lerp(ref.current.shift, (state.top.current - last) / 100, 0.1)\r\n    last = state.top.current\r\n  })\r\n\r\n  /**\r\n   * Need to apply a linear filter for post processing\r\n   */\r\n  return (\r\n    <group {...props} scale={[size, size, 0.1]}>\r\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\r\n        <customMaterial ref={ref} attach=\"material\" color={color} transparent opacity={opacity} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nconst MultilineText = ({ text, size = 1, lineHeight = 1, position = [0, 0, 0], ...props }) =>\r\n  text.split(\"\\n\").map((text, index) => <Text key={index} size={size} {...props} position={[position[0], position[1] - index * lineHeight, position[2]]} children={text} />)\r\n\r\nexport { Text, MultilineText }\r\n","import { ShaderMaterial, BackSide } from \"three\"\r\n\r\nexport default class RefractionMaterial extends ShaderMaterial {\r\n  constructor(options) {\r\n    super({\r\n      vertexShader: `varying vec3 worldNormal;\r\n      void main() {\r\n\r\n        vec4 transformedNormal = vec4(normal, 0.);\r\n        vec4 transformedPosition = vec4(position, 1.0);\r\n        #ifdef USE_INSTANCING\r\n          transformedNormal = instanceMatrix * transformedNormal;\r\n          transformedPosition = instanceMatrix * transformedPosition;\r\n        #endif\r\n\r\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\r\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\r\n      }`,\r\n      fragmentShader: `varying vec3 worldNormal;\r\n      void main() {\r\n        gl_FragColor = vec4(worldNormal, 1.0);\r\n      }`,\r\n      side: BackSide\r\n    })\r\n  }\r\n}\r\n","import { ShaderMaterial } from \"three\"\r\n\r\nexport default class RefractionMaterial extends ShaderMaterial {\r\n  constructor(options) {\r\n    super({\r\n      vertexShader: `varying vec3 worldNormal;\r\n      varying vec3 viewDirection;\r\n      void main() {\r\n\r\n        vec4 transformedNormal = vec4(normal, 0.);\r\n        vec4 transformedPosition = vec4(position, 1.0);\r\n        #ifdef USE_INSTANCING\r\n          transformedNormal = instanceMatrix * transformedNormal;\r\n          transformedPosition = instanceMatrix * transformedPosition;\r\n        #endif\r\n\r\n        vec4 worldPosition = modelMatrix * vec4( position, 1.0);\r\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\r\n        viewDirection = normalize(worldPosition.xyz - cameraPosition);;\r\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\r\n      }`,\r\n      fragmentShader: `uniform sampler2D envMap;\r\n      uniform sampler2D backfaceMap;\r\n      uniform vec2 resolution;\r\n      \r\n      varying vec3 worldNormal;\r\n      varying vec3 viewDirection;\r\n      \r\n      float ior = 2.4;\r\n      float a = 0.66;\r\n      \r\n      vec3 fogColor = vec3(1.0);\r\n      vec3 reflectionColor = vec3(1.0);\r\n      \r\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\r\n        return pow( 1.08 + dot( viewDirection, worldNormal), 10.0 );\r\n      }\r\n      \r\n      void main() {\r\n        // screen coordinates\r\n        vec2 uv = gl_FragCoord.xy / resolution;\r\n      \r\n        // sample backface data from texture\r\n        vec3 backfaceNormal = texture2D(backfaceMap, uv).rgb;\r\n      \r\n        // combine backface and frontface normal\r\n        vec3 normal = worldNormal * (1.0 - a) - backfaceNormal * a;\r\n      \r\n        // calculate refraction and apply to uv\r\n        vec3 refracted = refract(viewDirection, normal, 1.0/ior);\r\n        uv += refracted.xy;\r\n      \r\n        // sample environment texture\r\n        vec4 tex = texture2D(envMap, uv);\r\n      \r\n        // calculate fresnel\r\n        float fresnel = fresnelFunc(viewDirection, normal);\r\n      \r\n        vec4 color = tex;\r\n      \r\n        // apply fresnel\r\n        color.rgb = mix(color.rgb, reflectionColor, fresnel);\r\n      \r\n        gl_FragColor = vec4(color.rgb, 1.0);\r\n      }`\r\n    })\r\n\r\n    this.uniforms = {\r\n      envMap: { value: options.envMap },\r\n      backfaceMap: { value: options.backfaceMap },\r\n      resolution: { value: options.resolution }\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, useRef, useContext } from \"react\"\r\nimport { useFrame, useThree } from \"react-three-fiber\"\r\nimport lerp from \"lerp\"\r\nimport state from \"./store\"\r\n\r\nconst offsetContext = createContext(0)\r\n\r\nfunction Block({ children, offset, factor, ...props }) {\r\n  const { offset: parentOffset, sectionHeight } = useBlock()\r\n  const ref = useRef()\r\n  offset = offset !== undefined ? offset : parentOffset\r\n  useFrame(() => {\r\n    const curY = ref.current.position.y\r\n    const curTop = state.top.current\r\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\r\n  })\r\n  return (\r\n    <offsetContext.Provider value={offset}>\r\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\r\n        <group ref={ref}>{children}</group>\r\n      </group>\r\n    </offsetContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useBlock() {\r\n  const { sections, pages, zoom } = state\r\n  const { size, viewport } = useThree()\r\n  const offset = useContext(offsetContext)\r\n  const viewportWidth = viewport.width\r\n  const viewportHeight = viewport.height\r\n  const canvasWidth = viewportWidth / zoom\r\n  const canvasHeight = viewportHeight / zoom\r\n  const mobile = size.width < 700\r\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\r\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\r\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\r\n  const offsetFactor = (offset + 1.0) / sections\r\n  return {\r\n    viewport,\r\n    offset,\r\n    viewportWidth,\r\n    viewportHeight,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    mobile,\r\n    margin,\r\n    contentMaxWidth,\r\n    sectionHeight,\r\n    offsetFactor\r\n  }\r\n}\r\n\r\nexport { Block, useBlock }\r\n","import { WebGLRenderTarget, Object3D } from \"three\"\r\nimport React, { useRef, useMemo } from \"react\"\r\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport lerp from \"lerp\"\r\nimport BackfaceMaterial from \"./BackfaceMaterial\"\r\nimport RefractionMaterial from \"./RefractionMaterial\"\r\nimport { useBlock } from \"../blocks\"\r\nimport state from \"../store\"\r\n\r\nconst dummy = new Object3D()\r\nexport default function Diamonds() {\r\n  const gltf = useLoader(GLTFLoader, \"/diamond.glb\")\r\n  console.log(gltf)\r\n\r\n  useMemo(() => gltf.scene.children[0].geometry.center(), [])\r\n\r\n  const { size, gl, scene, camera, clock } = useThree()\r\n  const { contentMaxWidth, sectionHeight, mobile } = useBlock()\r\n  const model = useRef()\r\n  const ratio = gl.getPixelRatio()\r\n\r\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\r\n    const envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\r\n    const backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\r\n    const backfaceMaterial = new BackfaceMaterial()\r\n    const refractionMaterial = new RefractionMaterial({\r\n      envMap: envFbo.texture,\r\n      backfaceMap: backfaceFbo.texture,\r\n      resolution: [size.width * ratio, size.height * ratio]\r\n    })\r\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\r\n  }, [size, ratio])\r\n\r\n  useFrame(() => {\r\n    state.diamonds.forEach((data, i) => {\r\n      const t = clock.getElapsedTime() / 2\r\n      const { x, offset, scale, factor } = data\r\n      const s = (contentMaxWidth / 35) * scale\r\n      data.pos.set(mobile ? 0 : x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), 0)\r\n      dummy.position.copy(data.pos)\r\n      if (i === state.diamonds.length - 1) dummy.rotation.set(0, t, 0)\r\n      else dummy.rotation.set(0, t/2, 0)\r\n      dummy.scale.set(s, s, s)\r\n      dummy.updateMatrix()\r\n      model.current.setMatrixAt(i, dummy.matrix)\r\n      model.current.instanceMatrix.needsUpdate = true\r\n    })\r\n    //We are only rendering the instancedmesh for the diamonds, to avoid rendering the other objects in the scene (i.e. the rectangles) before they are ready.\r\n    if (state.rendered) {\r\n      gl.autoClear = false\r\n      camera.layers.set(0)\r\n      gl.setRenderTarget(envFbo)\r\n      gl.clearColor()\r\n      gl.render(scene, camera)\r\n      gl.clearDepth()\r\n      camera.layers.set(1)\r\n      model.current.material = backfaceMaterial\r\n      gl.setRenderTarget(backfaceFbo)\r\n      gl.clearDepth()\r\n      gl.render(scene, camera)\r\n      camera.layers.set(0)\r\n      gl.setRenderTarget(null)\r\n      gl.render(scene, camera)\r\n      gl.clearDepth()\r\n      camera.layers.set(1)\r\n      model.current.material = refractionMaterial\r\n      gl.render(scene, camera)\r\n    } else {\r\n      console.log(scene)\r\n\r\n      gl.autoClear = false\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(envFbo)\r\n    gl.clearColor()\r\n    gl.render(scene.children[11], camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = backfaceMaterial\r\n    gl.setRenderTarget(backfaceFbo)\r\n    gl.clearDepth()\r\n    gl.render(scene.children[11], camera)\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(null)\r\n    gl.render(scene.children[11], camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = refractionMaterial\r\n    gl.render(scene.children[11], camera)\r\n    state.rendered=true\r\n    }\r\n  }, 1)\r\n\r\n  return (\r\n      <instancedMesh ref={model} layers={1} args={[null, null, state.diamonds.length]} position={[0, 0, 50]}>\r\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\r\n      </instancedMesh>\r\n\r\n\r\n  )\r\n}\r\n","import { WebGLRenderTarget, Object3D } from \"three\"\r\nimport React, { useRef, useMemo } from \"react\"\r\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport lerp from \"lerp\"\r\nimport BackfaceMaterial from \"./BackfaceMaterial\"\r\nimport RefractionMaterial from \"./RefractionMaterial\"\r\nimport { useBlock } from \"../blocks\"\r\nimport state from \"../store\"\r\n\r\nconst dummy = new Object3D()\r\nexport default function Boxes() {\r\n  const gltf = useLoader(GLTFLoader, \"/frame.glb\") \r\n  useMemo(() => gltf.scene.children[0].children[0].children[0].children[0].geometry.center(), [])\r\n  useMemo(() => gltf.scene.children[0].children[0].children[0].children[1].geometry.center(), [])\r\n\r\n\r\n  const { size, gl, scene, camera, clock } = useThree()\r\n  const { contentMaxWidth, sectionHeight, mobile } = useBlock()\r\n  const model = useRef()\r\n  const ratio = gl.getPixelRatio()\r\n\r\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\r\n    const envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\r\n    const backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\r\n    const backfaceMaterial = new BackfaceMaterial()\r\n    const refractionMaterial = new RefractionMaterial({\r\n      envMap: envFbo.texture,\r\n      backfaceMap: backfaceFbo.texture,\r\n      resolution: [size.width * ratio, size.height * ratio]\r\n    })\r\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\r\n  }, [size, ratio])\r\n\r\n  useFrame(() => {\r\n    state.rectangles.forEach((data, i) => {\r\n      const t = clock.getElapsedTime() / 2\r\n      const { x, offset, scale, factor } = data\r\n      const s = (contentMaxWidth / 35) * scale\r\n      data.pos.set(mobile ? 0 : x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), 0)\r\n      dummy.position.copy(data.pos)\r\n      dummy.rotation.set(4.71239,0,0.1)\r\n      dummy.scale.set(s, s, s)\r\n      dummy.updateMatrix()\r\n      model.current.setMatrixAt(i, dummy.matrix)\r\n      model.current.instanceMatrix.needsUpdate = true\r\n    })\r\n\r\n    // Big if else statement to make sure that both the diamonds and panels have attached geometries before rendering the entire scene.\r\n    if (state.rendered) {\r\n    gl.autoClear = false\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(envFbo)\r\n    gl.clearColor()\r\n    gl.render(scene, camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = backfaceMaterial\r\n    gl.setRenderTarget(backfaceFbo)\r\n    gl.clearDepth()\r\n    gl.render(scene, camera)\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(null)\r\n    gl.render(scene, camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = refractionMaterial\r\n    gl.render(scene, camera)\r\n    } else {\r\n    gl.autoClear = false\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(envFbo)\r\n    gl.clearColor()\r\n    gl.render(scene.children[12], camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = backfaceMaterial\r\n    gl.setRenderTarget(backfaceFbo)\r\n    gl.clearDepth()\r\n    gl.render(scene.children[12], camera)\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(null)\r\n    gl.render(scene.children[12], camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = refractionMaterial\r\n    gl.render(scene.children[12], camera)\r\n    state.rendered = true\r\n    }\r\n  }, 1)\r\n\r\n  return (\r\n      <instancedMesh ref={model} layers={1} args={[null, null, state.rectangles.length]} position={[0, 0, 50]}>\r\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[4].geometry} />\r\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[5].geometry} />\r\n\r\n      </instancedMesh>\r\n\r\n\r\n  )\r\n}\r\n","import { ShaderMaterial, Color } from \"three\"\r\nimport { extend } from \"react-three-fiber\"\r\n\r\nclass CustomMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      vertexShader: `uniform float scale;\r\n      uniform float shift;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec3 pos = position;\r\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 1.5) * 0.125);\r\n        vUv = uv;\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\r\n      }`,\r\n      fragmentShader: `uniform sampler2D texture;\r\n      uniform float hasTexture;\r\n      uniform float shift;\r\n      uniform float scale;\r\n      uniform vec3 color;\r\n      uniform float opacity;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        float angle = 1.55;\r\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\r\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\r\n        vec4 cr = texture2D(texture, p + offset);\r\n        vec4 cga = texture2D(texture, p);\r\n        vec4 cb = texture2D(texture, p - offset);\r\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\r\n        else gl_FragColor = vec4(color, opacity);\r\n      }`,\r\n      uniforms: {\r\n        texture: { value: null },\r\n        hasTexture: { value: 0 },\r\n        scale: { value: 0 },\r\n        shift: { value: 0 },\r\n        opacity: { value: 1 },\r\n        color: { value: new Color(\"white\") }\r\n      }\r\n    })\r\n  }\r\n\r\n  set scale(value) {\r\n    this.uniforms.scale.value = value\r\n  }\r\n\r\n  get scale() {\r\n    return this.uniforms.scale.value\r\n  }\r\n\r\n  set shift(value) {\r\n    this.uniforms.shift.value = value\r\n  }\r\n\r\n  get shift() {\r\n    return this.uniforms.shift.value\r\n  }\r\n\r\n  set map(value) {\r\n    this.uniforms.hasTexture.value = !!value\r\n    this.uniforms.texture.value = value\r\n  }\r\n\r\n  get map() {\r\n    return this.uniforms.texture.value\r\n  }\r\n\r\n  get color() {\r\n    return this.uniforms.color.value\r\n  }\r\n\r\n  get opacity() {\r\n    return this.uniforms.opacity.value\r\n  }\r\n\r\n  set opacity(value) {\r\n    if (this.uniforms) this.uniforms.opacity.value = value\r\n  }\r\n}\r\n\r\nextend({ CustomMaterial })\r\n","import React, { forwardRef, useRef } from \"react\"\r\nimport { useFrame } from \"react-three-fiber\"\r\nimport lerp from \"lerp\"\r\nimport \"./CustomMaterial\"\r\nimport { useBlock } from \"../blocks\"\r\nimport state from \"../store\"\r\n\r\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\r\n  const { viewportHeight, offsetFactor } = useBlock()\r\n  const material = useRef()\r\n  let last = state.top.current\r\n  useFrame(() => {\r\n    const { pages, top } = state\r\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\r\n    material.current.shift = lerp(material.current.shift, (top.current - last) / shift, 0.1)\r\n    last = top.current\r\n  })\r\n  return (\r\n    <mesh ref={ref} {...props}>\r\n      <planeBufferGeometry attach=\"geometry\" args={args} />\r\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} transparent opacity={opacity} />\r\n    </mesh>\r\n  )\r\n})\r\n\r\nexport default Plane\r\n","import ReactDOM from \"react-dom\"\r\nimport React, { Suspense, useEffect, useRef, useMemo } from \"react\"\r\nimport { Canvas, Dom, useLoader, useFrame, useThree } from \"react-three-fiber\"\r\nimport { TextureLoader, LinearFilter } from \"three\"\r\nimport Navigation from \"./components/navigation\"\r\n\r\nimport lerp from \"lerp\"\r\nimport { Text, MultilineText } from \"./components/Text\"\r\nimport Diamonds from \"./diamonds/Diamonds\"\r\nimport Rectangles from \"./diamonds/Glass\"\r\nimport Plane from \"./components/Plane\"\r\nimport { Block, useBlock } from \"./blocks\"\r\nimport state from \"./store\"\r\nimport \"./styles.css\"\r\n\r\nfunction Startup() {\r\n\r\n  const ref = useRef()\r\n  useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\r\n  return <Plane ref={ref} color=\"#f8f8f8\" position={[0, 0, 200]} scale={[100, 100, 1]} />\r\n}\r\n\r\nfunction Paragraph({ image, index, offset, factor, header, aspect, text }) {\r\n  const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock()\r\n  const {gl} = useThree()\r\n  //const size = aspect < 1 && !mobile ? 0.6 : .7\r\n  const size = 0.6\r\n  const alignRight = (canvasWidth - w * size - margin) / 2\r\n  const pixelWidth = w * state.zoom * size\r\n  const left = !(index % 2)\r\n  const color = index % 2 ? \"#fff7c7\" : \"#b25253\"\r\n  useEffect(() => void gl.setPixelRatio(getDevicePixelRatio()*4), [])\r\n  return (\r\n    <Block factor={factor} offset={offset}>\r\n      <group position={[0, 0, 0]}>\r\n        <Plane map={image} args={[1, 1, 32, 32]} shift={50} size={size} aspect={aspect} scale={[w * size, (w * size) / aspect, 1]} frustumCulled={false} />\r\n        <Dom\r\n          style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: left ? \"left\" : \"right\" }}\r\n          position={[left || mobile ? (-w * size) / 2 : 0, (-w * size) / 2 / aspect - 0.4, 1]}>\r\n          <div tabIndex={index}>{text}</div>\r\n        </Dom>\r\n        <Text left={left} right={!left} size={w * 0.04} color={color} top position={[((left ? -w : w) * size) / 2, (w * size) / aspect / 2 + 0.5, -1]}>\r\n          {header}\r\n        </Text>\r\n        <Block factor={0.2}>\r\n          <Text opacity={0.5} size={w * 0.1} color=\"#ff7e30\" position={[((left ? w : -w) / 2) * size, (w * size) / aspect / 1.5, -10]}>\r\n            {\"0\" + (index + 1)}\r\n          </Text>\r\n        </Block>\r\n      </group>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction getDevicePixelRatio() {\r\n  var mediaQuery;\r\n  var is_firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  if (window.devicePixelRatio !== undefined && !is_firefox) {\r\n      return window.devicePixelRatio;\r\n  } else if (window.matchMedia) {\r\n      mediaQuery = \"(-webkit-min-device-pixel-ratio: 1.5),\\\r\n        (min--moz-device-pixel-ratio: 1.5),\\\r\n        (-o-min-device-pixel-ratio: 3/2),\\\r\n        (min-resolution: 1.5dppx)\";\r\n      if (window.matchMedia(mediaQuery).matches) {\r\n          return 1.5;\r\n      }\r\n      mediaQuery = \"(-webkit-min-device-pixel-ratio: 2),\\\r\n        (min--moz-device-pixel-ratio: 2),\\\r\n        (-o-min-device-pixel-ratio: 2/1),\\\r\n        (min-resolution: 2dppx)\";\r\n      if (window.matchMedia(mediaQuery).matches) {\r\n          return 2;\r\n      }\r\n      mediaQuery = \"(-webkit-min-device-pixel-ratio: 0.75),\\\r\n        (min--moz-device-pixel-ratio: 0.75),\\\r\n        (-o-min-device-pixel-ratio: 3/4),\\\r\n        (min-resolution: 0.75dppx)\";\r\n      if (window.matchMedia(mediaQuery).matches) {\r\n          return 0.7;\r\n      }\r\n  } else {\r\n      return 1;\r\n  }\r\n}\r\n\r\nfunction Content() {\r\n  const images = useLoader(\r\n    TextureLoader,\r\n    state.paragraphs.map(({ image }) => image)\r\n  )\r\n  const {gl} = useThree()\r\n  useEffect(() => void gl.setPixelRatio(getDevicePixelRatio()*4), [])\r\n  useMemo(() => images.forEach(texture => (texture.minFilter = LinearFilter)), [images])\r\n  const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock()\r\n  return (\r\n    <>\r\n      <Block factor={1} offset={0}>\r\n        <Block factor={1.2}>\r\n          <Text left size={w * 0.08} position={[-w / 3.2, 0.5, -1]} color=\"#b25253\">\r\n            Spencer\r\n          </Text>\r\n        </Block>\r\n        <Block factor={1.0}>\r\n          <Dom position={[-w / 3.2, -w * 0.08 + 0.25, -1]}>illustrator, front-end developer, {mobile ? <br /> : \" \"}mistake maker</Dom>\r\n        </Block>\r\n      </Block>\r\n      \r\n      {state.paragraphs.map((props, index) => (\r\n        <Paragraph key={index} index={index} {...props} image={images[index]} />\r\n      ))}\r\n      {state.stripes.map(({ offset, color, height }, index) => (\r\n        <Block key={index} factor={-1.5} offset={offset}>\r\n          <Plane args={[50, height, 32, 32]} shift={-4} color={color} rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]} />\r\n        </Block>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Background() {\r\n  // Calculates a plane filling the screen similar to background-size: cover\r\n  const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock()\r\n  return (\r\n    <mesh layers={0} scale={[canvasWidth, canvasHeight, 1]}>\r\n      <planeBufferGeometry attach=\"geometry\" />\r\n      <meshBasicMaterial attach=\"material\" color=\"#ffbf66\" depthTest={false} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\n\r\nfunction App() {\r\n  const scrollArea = useRef()\r\n  const onScroll = e => (state.top.current = e.target.scrollTop)\r\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\r\n  return (\r\n    <>\r\n      <Canvas className=\"canvas\" concurrent pixelRatio={getDevicePixelRatio()*4} orthographic camera={{ zoom: state.zoom, position: [0, 0, 500] }}>\r\n        <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\r\n          <Content />\r\n          <Diamonds />\r\n          <Rectangles />\r\n          <Background/>\r\n          \r\n          <Startup />\r\n        </Suspense>\r\n      </Canvas>\r\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\r\n        {new Array(state.sections).fill().map((_, index) => (\r\n          <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} />\r\n        ))}\r\n      </div>\r\n      <div className=\"frame\">\r\n        <Navigation/>\r\n        <div className=\"frame__nav\">\r\n          <a className=\"frame__link\" href=\"#00\" children=\"intro\" />\r\n          <a className=\"frame__link\" href=\"#01\" children=\"01\" />\r\n          <a className=\"frame__link\" href=\"#02\" children=\"02\" />\r\n          <a className=\"frame__link\" href=\"#03\" children=\"03\" />\r\n          <a className=\"frame__link\" href=\"#04\" children=\"04\" />\r\n          <a className=\"frame__link\" href=\"#05\" children=\"05\" />\r\n          <a className=\"frame__link\" href=\"#06\" children=\"06\" />\r\n          <a className=\"frame__link\" href=\"#07\" children=\"07\" />\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}